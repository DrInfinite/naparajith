---
/**
 * This website is only meant to showcase the work and and skills of the author,
 * on a professional level. It also has a blog, containing the author's observations
 * and opinions on various topics. The views expressed are the author's own.
 * Copyright (C) 2025  T L Naparajith
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License Version 3 as published
 * by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/agpl-3.0.txt>.
 *
 * Contact me through electronic mail: <naparajith@duck.com>
 */

import "@/styles/globals.css";

import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
import { Font } from "astro:assets";
import FAQs, { type FAQ } from "@/tools/FAQ.astro";
import HowToUse from "@/tools/HowToUse.astro";

interface Props {
	title: string;
	description: string;
	instructions: string[];
	faqs?: FAQ[];
	ogImage?: string;
}

const { title, description, instructions, faqs, ogImage } = Astro.props;
const defaultOgImage = "../images/arch-rainbow-1920x1080.png";
---

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
			return localStorage.getItem("theme");
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches
			? "dark"
			: "light";
	};
	const isDark = getThemePreference() === "dark";
	document.documentElement.classList[isDark ? "add" : "remove"]("dark");

	if (typeof localStorage !== "undefined") {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
		});
		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ["class"],
		});
	}
</script>

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link href="https://mastodon.social/@naparajith" rel="me" />
		<meta name="generator" content={Astro.generator} />
		<title>{title} | Naparajith</title>
		<meta name="description" content={description} />

		<meta property="og:description" content={description} />
		<meta property="og:locale" content="en_IN" />
		<meta property="og:site_name" content="Naparajith" />
		<meta property="og:title" content=`${title} | Naparajith` />
		<meta property="og:url" content={Astro.url} />
		<meta property="og:image" content={ogImage || defaultOgImage} />

		<meta property="twitter:title" content=`${title} | Naparajith` />
		<meta property="twitter:description" content={description} />

		<Font cssVariable="--font-sans" preload />
		<Font cssVariable="--font-serif" preload />
		<Font cssVariable="--font-quote" preload />
	</head>
	<body>
		<Header />
		<h1>{title}</h1>
		<p>{description}</p>
		<slot />

		<HowToUse instructions={instructions} />
		<FAQs faqs={faqs} />
		<Footer />
	</body>
</html>
