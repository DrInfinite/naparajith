---
/**
 * This website is only meant to showcase the work and and skills of the author,
 * on a professional level. It also has a blog, containing the author's observations
 * and opinions on various topics. The views expressed are the author's own.
 * Copyright (C) 2024  T L Naparajith
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License Version 3 as published
 * by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/agpl-3.0.txt>.
 *
 * Contact me through electronic mail: <naparajith@duck.com>
 */

import Layout from "@/layouts/Layout.astro";
import { getImage, Image } from "astro:assets";
import { getCollection, getEntry } from "astro:content";

let posts = await getCollection("blog");
posts = posts.filter((acc) => acc.data.draft !== true);
---

<Layout
	title="Blog"
	description="The Official Blog for Naparajith, a Software Engineer from India"
>
	<main
		class="flex min-h-[60vh] flex-row flex-wrap place-content-center justify-evenly ~gap-2/4"
	>
		{
			posts.map(async (post) => (
				<a
					href={`/blog/${post.slug}`}
					class="flex w-full flex-col justify-evenly border border-border decoration-transparent ~rounded-none/xl hover:bg-foreground/10"
				>
					<div class="p-2 ~rounded-none/xl">
						<Image
							src={
								(await getImage({ src: post.data.image, format: "webp" })).src
							}
							alt={post.data.title}
							inferSize
							width={1920}
							height={1080}
							decoding={"async"}
							loading={"eager"}
							class="-my-px aspect-auto w-full border border-border ~rounded-none/xl"
							transition:name="image"
						/>
					</div>
					<article class="flex justify-between bg-gradient-to-br from-[#d83333] to-[#f041ff] bg-clip-text text-transparent ~p-2/4">
						<small>{post.data.created.toDateString()}</small>
						<small>{(await getEntry(post.data.author)).data.name}</small>
					</article>
					<article class="flex flex-col ~gap-2/4 ~p-2/4">
						<h3 class="-my-px" transition:name="post-title">
							{post.data.title}
						</h3>
						<small class="-my-px truncate" transition:name="post-description">
							{post.data.description}
						</small>
					</article>
				</a>
			))
		}
		<!-- <h1>Coming Soon!</h1> -->
	</main>
</Layout>
