---
import A from "@/components/A.astro";
import Layout from "@/layouts/Layout.astro";
import type { GetStaticPaths } from "astro";
import { Image, Picture } from "astro:assets";
import { getCollection, getEntry, render } from "astro:content";

export const getStaticPaths = (async () => {
	const result = await getCollection("blog");
	const posts = result.filter((acc) => acc.data.draft !== true);
	return posts.map((post) => ({
		params: { slug: post.id },
		props: { post },
	}));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const author = await getEntry(post.data.author);
const { Content, remarkPluginFrontmatter } = await render(post);
---

<Layout
	title={`${post.data.title}`}
	description=`Blog Post: ${post.data.title} - ${[post.data.description]}`
	ogImage={post.data.image}
>
	<h1 class="text-center" transition:name="post-title">
		{post.data.title}
	</h1>
	<div class="flex flex-grow flex-col justify-evenly ~gap-4/8">
		<p class="font-semibold" transition:name="post-description">
			<span>{post.data.description}</span>
		</p>
		<a
			href={author.data.social}
			target="_blank"
			title={author.data.name}
			class="flex flex-row items-center justify-center border border-border no-underline ~-my-2/4 ~gap-2/4 ~rounded-none/xl hover:bg-foreground/10"
		>
			<Image
				src={author.data.image}
				alt={author.data.name}
				inferSize
				loading={"lazy"}
				decoding={"async"}
				width={48}
				height={48}
				class="hidden rounded-full ~-my-2/4 ~size-6/12 md:inline"
			/>
			<p>{author.data.name}</p>
			<small
				class="bg-gradient-to-br from-[#d83333] to-[#f041ff] bg-clip-text text-transparent"
			>
				{author.data.occupation}
			</small>
		</a>
		<div
			class="flex flex-row flex-wrap justify-between border border-border ~-mb-2/4 ~rounded-none/xl ~px-4/8 ~py-2/4"
		>
			<strong>{remarkPluginFrontmatter.minutesRead}</strong>
			<strong>{post.data.created.toDateString().slice(4)}</strong>
			<strong>{remarkPluginFrontmatter.words} words</strong>
		</div>
	</div>
	<figure>
		<Picture
			src={post.data.image}
			alt={post.data.title}
			inferSize
			width="1920"
			height="1080"
			formats={["webp", "avif"]}
			loading={"eager"}
			decoding={"async"}
			class="aspect-auto w-full border border-border ~rounded-none/xl"
			transition:name="image"
		/>
		<figcaption class="bg-background text-center text-foreground">
			<span class="font-semibold italic">This image comes from </span><A
				href={post.data.image}
				title={post.data.title}
				target="_blank"
			>
				{post.data.image_source}
			</A>
		</figcaption>
	</figure>
	<Content />
</Layout>
